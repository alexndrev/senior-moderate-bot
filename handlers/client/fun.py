from aiogram import Bot, Dispatcher
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from config.config import *
from config.db import *

from keyboards.admin.inlines import *

storage = MemoryStorage()
bot = Bot(token=token, parse_mode=parse_mode)
dp = Dispatcher(bot, storage=storage)


@dp.message_handler(text=["hug", '–æ–±–Ω—è—Ç—å', '–æ–±—ñ–π–Ω—è—Ç–∏'])
async def hugCommand(message):
    await update_messages(message.from_user.full_name, message.from_user.id, message.chat.id, 1)
    await update_messagesGlobal(message.from_user.full_name, message.from_user.id, 1)
    l11n = get_localization(message.chat.id)
    match l11n:
        case 'uk':
            await message.reply(
                f"<b><a href='tg://user?id={message.from_user.id}'>{message.from_user.first_name}</a></b> –æ–±—ñ–π–Ω—è–≤ <b><a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.first_name}</a></b> ü§ó",
                parse_mode="html")
        case _:
            await message.reply(
                f"<b><a href='tg://user?id={message.from_user.id}'>{message.from_user.first_name}</a></b> –æ–±–Ω—è–ª <b><a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.first_name}</a></b> ü§ó",
                parse_mode="html")


@dp.message_handler(text=["kiss", '–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å', '–ø–æ—Ü—ñ–ª—É–≤–∞—Ç–∏'])
async def kissCommand(message):
    await update_messages(message.from_user.full_name, message.from_user.id, message.chat.id, 1)
    await update_messagesGlobal(message.from_user.full_name, message.from_user.id, 1)
    l11n = get_localization(message.chat.id)
    match l11n:
        case 'uk':
            await message.reply(
                f"<b><a href='tg://user?id={message.from_user.id}'>{message.from_user.first_name}</a></b> –ø–æ—Ü—ñ–ª—É–≤–∞–≤ <b><a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.first_name}</a></b> üíã",
                parse_mode="html")
        case _:
            await message.reply(
                f"<b><a href='tg://user?id={message.from_user.id}'>{message.from_user.first_name}</a></b> –ø–æ—Ü–µ–ª–æ–≤–∞–ª <b><a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.first_name}</a></b> üíã",
                parse_mode="html")


@dp.message_handler(text=["intim", '–∏–Ω—Ç–∏–º', '—ñ–Ω—Ç–∏–º'])
async def intimCommand(message):
    await update_messages(message.from_user.full_name, message.from_user.id, message.chat.id, 1)
    await update_messagesGlobal(message.from_user.full_name, message.from_user.id, 1)
    l11n = get_localization(message.chat.id)
    match l11n:
        case 'uk':
            if message.reply_to_message.from_user.id == admin:
                await message.answer('–ê–π-–∞–π-–∞–π, –ø—É—Å—Ç—É–Ω—è')
            else:
                await message.reply(
                    f"<b><a href='tg://user?id={message.from_user.id}'>{message.from_user.first_name}</a></b> –ø—Ä–∏–º—É—Å–∏–≤ –¥–æ —ñ–Ω—Ç–∏–º—É <b><a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.first_name}</a></b> ‚ù§Ô∏è‚Äçüî•",
                    parse_mode="html")
        case _:
            if message.reply_to_message.from_user.id == admin:
                await message.answer('–ê–π-–∞–π-–∞–π, —à–∞–ª—É–Ω–∏—à–∫–∞')
            else:
                await message.reply(
                    f"<b><a href='tg://user?id={message.from_user.id}'>{message.from_user.first_name}</a></b> –ø—Ä–∏–Ω—É–¥–∏–ª –∫ –∏–Ω—Ç–∏–º—É <b><a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.first_name}</a></b> ‚ù§Ô∏è‚Äçüî•",
                    parse_mode="html")


@dp.message_handler(text=["kill", '—É–±–∏—Ç—å', '–≤–±–∏—Ç–∏'])
async def killCommand(message):
    await update_messages(message.from_user.full_name, message.from_user.id, message.chat.id, 1)
    await update_messagesGlobal(message.from_user.full_name, message.from_user.id, 1)
    l11n = get_localization(message.chat.id)
    match l11n:
        case 'uk':
            if message.reply_to_message.from_user.id == admin:
                await message.answer('–ê–π-–∞–π-–∞–π, —Ñ—É —Ç–∞–∫ —Ä–æ–±–∏—Ç–∏')
            else:
                await message.reply(
                    f"<b><a href='tg://user?id={message.from_user.id}'>{message.from_user.first_name}</a></b> –≤–±–∏–≤ <b><a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.first_name}</a></b> üî´",
                    parse_mode="html")
        case _:
            if message.reply_to_message.from_user.id == admin:
                await message.answer('–ê–π-–∞–π-–∞–π, —Ñ—É —Ç–∞–∫ –¥–µ–ª–∞—Ç—å')
            else:
                await message.reply(
                    f"<b><a href='tg://user?id={message.from_user.id}'>{message.from_user.first_name}</a></b> —É–±–∏–ª <b><a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.first_name}</a></b> üî´",
                    parse_mode="html")


def register_handlers_fun(dp: Dispatcher):
    dp.register_message_handler(hugCommand, text=["hug", '–æ–±–Ω—è—Ç—å', '–æ–±—ñ–π–Ω—è—Ç–∏'])
    dp.register_message_handler(kissCommand, text=["kiss", '–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å', '–ø–æ—Ü—ñ–ª—É–≤–∞—Ç–∏'])
    dp.register_message_handler(intimCommand, text=["intim", '–∏–Ω—Ç–∏–º', '—ñ–Ω—Ç–∏–º'])
    dp.register_message_handler(killCommand, text=["kill", '—É–±–∏—Ç—å', '–≤–±–∏—Ç–∏'])
